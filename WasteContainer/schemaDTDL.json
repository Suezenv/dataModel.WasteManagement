{
    "@id": "dtmi:com:ngsi-ld:WasteContainer;0",
    "@type": "Interface",
    "@context": "dtmi:dtdl:context;2",
    "comment": " - Waste Management / Waste Container adapted to DTDL from smartdatamodels.org. Source: https://raw.githubusercontent.com/smart-data-models/dataModel.WasteManagement/master/WasteContainer/schema.json",
    "description": "A waste container",
    "displayName": "WasteContainer",
    "contents": [
        {
            "name": "TimeInstant",
            "writable": true,
            "displayName": "TimeInstant",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "There can be production environmments where the attribute type is equal to the `ISO8601` string. If so, it must be considered as a synonym of `DateTime`."
        },
        {
            "name": "actuationHours",
            "writable": true,
            "displayName": "actuationHours",
            "@type": "Property",
            "schema": "string",
            "comment": "Hours suitable for performing actuations over the container."
        },
        {
            "name": "alternateName",
            "writable": true,
            "displayName": "alternateName",
            "@type": "Property",
            "schema": "string",
            "comment": "An alternative name for this item"
        },
        {
            "name": "areaServed",
            "writable": true,
            "displayName": "areaServed",
            "@type": "Property",
            "schema": "string",
            "comment": "The geographic area where a service or offered item is provided"
        },
        {
            "name": "cargoWeight",
            "writable": true,
            "displayName": "cargoWeight",
            "@type": "Property",
            "schema": "long",
            "comment": "Weight of the container load."
        },
        {
            "name": "color",
            "writable": true,
            "displayName": "color",
            "@type": "Property",
            "schema": "string",
            "comment": "The color of the product"
        },
        {
            "name": "dataProvider",
            "writable": true,
            "displayName": "dataProvider",
            "@type": "Property",
            "schema": "string",
            "comment": "A sequence of characters identifying the provider of the harmonised data entity."
        },
        {
            "name": "dateCreated",
            "writable": true,
            "displayName": "dateCreated",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "Entity creation timestamp. This will usually be allocated by the storage platform."
        },
        {
            "name": "dateLastCleaning",
            "writable": true,
            "displayName": "dateLastCleaning",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "When the container was cleaned last time. "
        },
        {
            "name": "dateLastEmptying",
            "writable": true,
            "displayName": "dateLastEmptying",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "Timestamp which represents when the container was emptied last time."
        },
        {
            "name": "dateModified",
            "writable": true,
            "displayName": "dateModified",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "Timestamp of the last modification of the entity. This will usually be allocated by the storage platform."
        },
        {
            "name": "dateServiceStarted",
            "writable": true,
            "displayName": "dateServiceStarted",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "Date at which the container started giving service."
        },
        {
            "name": "description",
            "writable": true,
            "displayName": "description",
            "@type": "Property",
            "schema": "string",
            "comment": "A description of this item"
        },
        {
            "name": "fillingLevel",
            "writable": true,
            "displayName": "fillingLevel",
            "@type": "Property",
            "schema": "long",
            "comment": "Filling level of the container"
        },
        {
            "name": "image",
            "writable": true,
            "displayName": "image",
            "@type": "Property",
            "schema": "string",
            "comment": "An image of the item"
        },
        {
            "name": "isleId",
            "writable": true,
            "displayName": "isleId",
            "@type": "Property",
            "schema": "string",
            "comment": "Identifier (or name) of the isle where the container is placed. This attribute should be used when entities of type `WasteContainerIsle` are not being modelled specifically. Otherwise, `refWasteContainerIsle` should be used."
        },
        {
            "name": "methaneConcentration",
            "writable": true,
            "displayName": "methaneConcentration",
            "@type": "Property",
            "schema": "long",
            "comment": "Methane (CH4) concentration inside the container."
        },
        {
            "name": "name",
            "writable": true,
            "displayName": "name",
            "@type": "Property",
            "schema": "string",
            "comment": "The name of this item."
        },
        {
            "name": "nextActuationDeadline",
            "writable": true,
            "displayName": "nextActuationDeadline",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "Deadline for next actuation to be performed (emptying, picking up, etc.)."
        },
        {
            "name": "nextCleaningDeadline",
            "writable": true,
            "displayName": "nextCleaningDeadline",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "Deadline for next cleaning."
        },
        {
            "name": "refWasteContainerIsle",
            "writable": true,
            "displayName": "refWasteContainerIsle"
        },
        {
            "name": "refWasteContainerModel",
            "writable": true,
            "displayName": "refWasteContainerModel"
        },
        {
            "name": "regulation",
            "writable": true,
            "displayName": "regulation",
            "@type": "Property",
            "schema": "string",
            "comment": "Regulation under which the container is operating"
        },
        {
            "name": "responsible",
            "writable": true,
            "displayName": "responsible",
            "@type": "Property",
            "schema": "string",
            "comment": "Responsible for the container, i.e. entity in charge of  actuating (emptying, collecting, etc)"
        },
        {
            "name": "seeAlso",
            "writable": true,
            "displayName": "seeAlso"
        },
        {
            "name": "serialNumber",
            "writable": true,
            "displayName": "serialNumber",
            "@type": "Property",
            "schema": "string",
            "comment": "Serial number of the container."
        },
        {
            "name": "source",
            "writable": true,
            "displayName": "source",
            "@type": "Property",
            "schema": "string",
            "comment": "A sequence of characters giving the original source of the entity data as a URL. Recommended to be the fully qualified domain name of the source provider, or the URL to the source object."
        },
        {
            "name": "storedWasteCode",
            "writable": true,
            "displayName": "storedWasteCode",
            "@type": "Property",
            "schema": "string",
            "comment": "Depend on the target regulation. For Europe, check [Europe's List of Waste](http://ec.europa.eu/environment/waste/framework/list.htm)."
        },
        {
            "name": "temperature",
            "writable": true,
            "displayName": "temperature",
            "@type": "Property",
            "schema": "long",
            "comment": "Temperature inside the container"
        },
        {
            "@type": "Telemetry",
            "name": "location_Point",
            "schema": "point"
        },
        {
            "@type": "Telemetry",
            "name": "location_LineString",
            "schema": "lineString"
        },
        {
            "@type": "Telemetry",
            "name": "location_Polygon",
            "schema": "polygon"
        },
        {
            "@type": "Telemetry",
            "name": "location_MultiPoint",
            "schema": "multiPoint"
        },
        {
            "@type": "Telemetry",
            "name": "location_MultiLineString",
            "schema": "multiLineString"
        },
        {
            "@type": "Telemetry",
            "name": "location_MultiPolygon",
            "schema": "multiPolygon"
        },
        {
            "@type": "Telemetry",
            "name": "annotations",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "Annotations about the item",
            "displayName": "annotations"
        },
        {
            "@type": "Telemetry",
            "name": "category",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "",
            "displayName": "category"
        },
        {
            "@type": "Telemetry",
            "name": "owner",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "A List containing a JSON encoded sequence of characters referencing the unique Ids of the owner(s)",
            "displayName": "owner"
        },
        {
            "@type": "Telemetry",
            "name": "refDevice",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "Reference to the device(s) used to monitor this container",
            "displayName": "refDevice"
        },
        {
            "@type": "object",
            "name": "address",
            "comment": "The mailing address",
            "displayName": "address",
            "fields": [
                {
                    "name": "addressCountry",
                    "schema": "string"
                },
                {
                    "name": "addressLocality",
                    "schema": "string"
                },
                {
                    "name": "addressRegion",
                    "schema": "string"
                },
                {
                    "name": "postOfficeBoxNumber",
                    "schema": "string"
                },
                {
                    "name": "postalCode",
                    "schema": "string"
                },
                {
                    "name": "streetAddress",
                    "schema": "string"
                }
            ]
        },
        {
            "@type": "Telemetry",
            "name": "status",
            "schema": {
                "@type": "Enum",
                "valueSchema": "string",
                "enumValues": [
                    {
                        "name": "ok",
                        "displayName": "ok",
                        "enumValue": 1
                    },
                    {
                        "name": "lidOpen",
                        "displayName": "lidOpen",
                        "enumValue": 2
                    },
                    {
                        "name": "dropped",
                        "displayName": "dropped",
                        "enumValue": 3
                    },
                    {
                        "name": "moved",
                        "displayName": "moved",
                        "enumValue": 4
                    },
                    {
                        "name": "vandalized",
                        "displayName": "vandalized",
                        "enumValue": 5
                    },
                    {
                        "name": "burning",
                        "displayName": "burning",
                        "enumValue": 6
                    },
                    {
                        "name": "unknown",
                        "displayName": "unknown",
                        "enumValue": 7
                    }
                ]
            }
        },
        {
            "@type": "Telemetry",
            "name": "storedWasteKind",
            "schema": {
                "@type": "Enum",
                "valueSchema": "string",
                "enumValues": [
                    {
                        "name": "organic",
                        "displayName": "organic",
                        "enumValue": 1
                    },
                    {
                        "name": "inorganic",
                        "displayName": "inorganic",
                        "enumValue": 2
                    },
                    {
                        "name": "glass",
                        "displayName": "glass",
                        "enumValue": 3
                    },
                    {
                        "name": "oil",
                        "displayName": "oil",
                        "enumValue": 4
                    },
                    {
                        "name": "plastic",
                        "displayName": "plastic",
                        "enumValue": 5
                    },
                    {
                        "name": "metal",
                        "displayName": "metal",
                        "enumValue": 6
                    },
                    {
                        "name": "paper",
                        "displayName": "paper",
                        "enumValue": 7
                    },
                    {
                        "name": "batteries",
                        "displayName": "batteries",
                        "enumValue": 8
                    },
                    {
                        "name": "electronics",
                        "displayName": "electronics",
                        "enumValue": 9
                    },
                    {
                        "name": "hazardous",
                        "displayName": "hazardous",
                        "enumValue": 10
                    },
                    {
                        "name": "other",
                        "displayName": "other",
                        "enumValue": 11
                    }
                ]
            }
        },
        {
            "@type": "Telemetry",
            "name": "storedWasteOrigin",
            "schema": {
                "@type": "Enum",
                "valueSchema": "string",
                "enumValues": [
                    {
                        "name": "household",
                        "displayName": "household",
                        "enumValue": 1
                    },
                    {
                        "name": "municipal",
                        "displayName": "municipal",
                        "enumValue": 2
                    },
                    {
                        "name": "industrial",
                        "displayName": "industrial",
                        "enumValue": 3
                    },
                    {
                        "name": "construction",
                        "displayName": "construction",
                        "enumValue": 4
                    },
                    {
                        "name": "hostelry",
                        "displayName": "hostelry",
                        "enumValue": 5
                    },
                    {
                        "name": "agriculture",
                        "displayName": "agriculture",
                        "enumValue": 6
                    },
                    {
                        "name": "other",
                        "displayName": "other",
                        "enumValue": 7
                    }
                ]
            }
        }
    ]
}